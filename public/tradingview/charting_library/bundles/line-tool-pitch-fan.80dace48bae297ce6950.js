"use strict";(self.webpackChunktradingview=self.webpackChunktradingview||[]).push([[1313],{15399:(e,t,s)=>{s.d(t,{LevelsProperty:()=>v});var r=s(90054),i=s(16738),n=s(37265),l=s(32679),a=s(35039);const o={prefixes:[""],range:[0,0],names:["coeff","color","visible","linestyle","linewidth"],typecheck:{pack:()=>Object(),unpack:()=>[]}};function c(e,t,s,r){return r.push(s[t]),r}function h(e,t,s,r){return r[t]=s[e],r}function u(){return[]}function p(){return{}}function d(e,t,s){return s.prefixes.forEach((r=>{const i=r+"level";for(let r=s.range[0];r<=s.range[1];r++)if(e[i+r]&&(0,n.isSameType)(e[i+r],t.typecheck())){let n=t.tpl();s.names.forEach(((s,l)=>{n=t.fill(""+l,s,e[i+r],n)})),e[i+r]=n}})),e}function f(e,t,s){return s(e,{tpl:p,fill:h,typecheck:t.typecheck.unpack},t)}class v extends l.DefaultProperty{constructor(e){const{levelsIterator:t=d,map:s={},...r}=e,i={...o,...s};r.state&&(r.state=f(r.state,i,t)),super(r),this._map=i,this._levelsIterator=t}state(e,t,s){const r=super.state(e,t);return s?r:(i=r,n=this._map,(0,this._levelsIterator)(i,{tpl:u,fill:c,typecheck:n.typecheck.pack},n));var i,n}preferences(){return(0,l.extractState)(this.state(this._excludedDefaultsKeys,void 0,!0),this._allDefaultsKeys)}applyTemplate(e,t){this.mergeAndFire((0,l.extractState)((0,i.default)((0,r.default)(t),f(e,this._map,this._levelsIterator)),this._allStateKeys,this._excludedTemplateKeys))}saveDefaults(){this._useUserPreferences&&(0,a.saveDefaults)(this._defaultName,this.preferences())}clone(){return new v(this._options())}merge(e,t){return super.merge(this._map?f(e,this._map,this._levelsIterator):e,t)}_options(){return{...super._options(),map:{...this._map},levelsIterator:this._levelsIterator}}}},83779:(e,t,s)=>{s.r(t),s.d(t,{LineToolPitchfan:()=>p});var r=s(50151),i=s(11542),n=s(15399),l=s(45126),a=s(85719),o=s(29875),c=s(73305);const h=new l.TranslatedString("erase level line",i.t(null,void 0,s(77114)));var u;!function(e){e[e.LevelsCount=8]="LevelsCount"}(u||(u={}));class p extends o.LineDataSource{constructor(e,t,r,i){super(e,t??p.createProperties(e.backgroundTheme().spawnOwnership()),r,i),Promise.all([s.e(2870),s.e(2211),s.e(1583)]).then(s.bind(s,4086)).then((({PitchfanLinePaneView:e})=>{this._setPaneViews([new e(this,this._model)])}))}levelsCount(){return 8}pointsCount(){return 3}name(){return"Pitchfan"}processErase(e,t){const s="level"+t,i=(0,r.ensureDefined)(this.properties().child(s)).childs().visible;e.setProperty(i,!1,h,a.lineToolsDoNotAffectChartInvalidation)}static createProperties(e,t){const s=new n.LevelsProperty({defaultName:"linetoolpitchfan",state:t,map:{range:[0,8]},theme:e});return this._configureProperties(s),s}async _getPropertyDefinitionsViewModelClass(){return(await Promise.all([s.e(3401),s.e(3889),s.e(8009),s.e(6204),s.e(1963),s.e(8537)]).then(s.bind(s,56641))).PitchBaseDefinitionsViewModel}static _configureProperties(e){super._configureProperties(e);const t=[e.childs().median.childs().linewidth],s=[e.childs().median.childs().color];for(let i=0;i<=8;i++){const n=(0,r.ensureDefined)(e.child("level"+i));t.push((0,
r.ensureDefined)(n.child("linewidth"))),s.push((0,r.ensureDefined)(n.child("color")))}e.addChild("linesColors",new c.LineToolColorsProperty(s)),e.addChild("linesWidths",new c.LineToolWidthsProperty(t))}}}}]);