"use strict";(self.webpackChunktradingview=self.webpackChunktradingview||[]).push([[2816],{15399:(e,t,r)=>{r.d(t,{LevelsProperty:()=>v});var s=r(90054),i=r(16738),n=r(37265),l=r(32679),a=r(35039);const o={prefixes:[""],range:[0,0],names:["coeff","color","visible","linestyle","linewidth"],typecheck:{pack:()=>Object(),unpack:()=>[]}};function c(e,t,r,s){return s.push(r[t]),s}function p(e,t,r,s){return s[t]=r[e],s}function u(){return[]}function h(){return{}}function d(e,t,r){return r.prefixes.forEach((s=>{const i=s+"level";for(let s=r.range[0];s<=r.range[1];s++)if(e[i+s]&&(0,n.isSameType)(e[i+s],t.typecheck())){let n=t.tpl();r.names.forEach(((r,l)=>{n=t.fill(""+l,r,e[i+s],n)})),e[i+s]=n}})),e}function f(e,t,r){return r(e,{tpl:h,fill:p,typecheck:t.typecheck.unpack},t)}class v extends l.DefaultProperty{constructor(e){const{levelsIterator:t=d,map:r={},...s}=e,i={...o,...r};s.state&&(s.state=f(s.state,i,t)),super(s),this._map=i,this._levelsIterator=t}state(e,t,r){const s=super.state(e,t);return r?s:(i=s,n=this._map,(0,this._levelsIterator)(i,{tpl:u,fill:c,typecheck:n.typecheck.pack},n));var i,n}preferences(){return(0,l.extractState)(this.state(this._excludedDefaultsKeys,void 0,!0),this._allDefaultsKeys)}applyTemplate(e,t){this.mergeAndFire((0,l.extractState)((0,i.default)((0,s.default)(t),f(e,this._map,this._levelsIterator)),this._allStateKeys,this._excludedTemplateKeys))}saveDefaults(){this._useUserPreferences&&(0,a.saveDefaults)(this._defaultName,this.preferences())}clone(){return new v(this._options())}merge(e,t){return super.merge(this._map?f(e,this._map,this._levelsIterator):e,t)}_options(){return{...super._options(),map:{...this._map},levelsIterator:this._levelsIterator}}}},57994:(e,t,r)=>{r.r(t),r.d(t,{LineToolFibCircles:()=>h});var s=r(50151),i=r(11542),n=r(45126),l=r(15399),a=r(73305),o=r(85719),c=r(10568);const p=new n.TranslatedString("erase level line",i.t(null,void 0,r(77114)));var u;!function(e){e[e.LevelsCount=11]="LevelsCount"}(u||(u={}));class h extends c.InplaceTextLineDataSource{constructor(e,t,s,i){super(e,t??h.createProperties(e.backgroundTheme().spawnOwnership()),s,i),Promise.all([r.e(2870),r.e(2211),r.e(1583)]).then(r.bind(r,83201)).then((e=>{this._setPaneViews([new e.FibCirclesPaneView(this,this._model)])}))}levelsCount(){return 11}pointsCount(){return 2}name(){return"Fib Circles"}processErase(e,t){const r=(0,s.ensureDefined)(this.properties().child(`level${t}`));e.setProperty(r,!1,p,o.lineToolsDoNotAffectChartInvalidation)}editableTextProperties(){(0,s.assert)(!1,"unexpected method call")}snapTo45DegreesAvailable(){return!0}static createProperties(e,t){const r=new l.LevelsProperty({defaultName:"linetoolfibcircles",state:t,map:{range:[1,11]},theme:e});return this._configureProperties(r),r}async _getPropertyDefinitionsViewModelClass(){return(await Promise.all([r.e(3401),r.e(3889),r.e(8009),r.e(6204),r.e(1963),r.e(8537)]).then(r.bind(r,41618))).FibCirclesDefinitionsViewModel}static _configureProperties(e){super._configureProperties(e)
;const t=e.childs(),r=[t.trendline.childs().linewidth],i=[t.trendline.childs().color];for(let t=1;t<=11;t++)r.push((0,s.ensureDefined)(e.child("level"+t)?.child("linewidth"))),i.push((0,s.ensureDefined)(e.child("level"+t)?.child("color")));e.addChild("linesColors",new a.LineToolColorsProperty(i)),e.addChild("linesWidths",new a.LineToolWidthsProperty(r))}}}}]);