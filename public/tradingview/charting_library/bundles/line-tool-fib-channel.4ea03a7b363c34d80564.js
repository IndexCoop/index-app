"use strict";(self.webpackChunktradingview=self.webpackChunktradingview||[]).push([[2283],{15399:(e,t,s)=>{s.d(t,{LevelsProperty:()=>v});var r=s(90054),n=s(16738),i=s(37265),l=s(32679),a=s(35039);const o={prefixes:[""],range:[0,0],names:["coeff","color","visible","linestyle","linewidth"],typecheck:{pack:()=>Object(),unpack:()=>[]}};function c(e,t,s,r){return r.push(s[t]),r}function h(e,t,s,r){return r[t]=s[e],r}function p(){return[]}function u(){return{}}function f(e,t,s){return s.prefixes.forEach((r=>{const n=r+"level";for(let r=s.range[0];r<=s.range[1];r++)if(e[n+r]&&(0,i.isSameType)(e[n+r],t.typecheck())){let i=t.tpl();s.names.forEach(((s,l)=>{i=t.fill(""+l,s,e[n+r],i)})),e[n+r]=i}})),e}function d(e,t,s){return s(e,{tpl:u,fill:h,typecheck:t.typecheck.unpack},t)}class v extends l.DefaultProperty{constructor(e){const{levelsIterator:t=f,map:s={},...r}=e,n={...o,...s};r.state&&(r.state=d(r.state,n,t)),super(r),this._map=n,this._levelsIterator=t}state(e,t,s){const r=super.state(e,t);return s?r:(n=r,i=this._map,(0,this._levelsIterator)(n,{tpl:p,fill:c,typecheck:i.typecheck.pack},i));var n,i}preferences(){return(0,l.extractState)(this.state(this._excludedDefaultsKeys,void 0,!0),this._allDefaultsKeys)}applyTemplate(e,t){this.mergeAndFire((0,l.extractState)((0,n.default)((0,r.default)(t),d(e,this._map,this._levelsIterator)),this._allStateKeys,this._excludedTemplateKeys))}saveDefaults(){this._useUserPreferences&&(0,a.saveDefaults)(this._defaultName,this.preferences())}clone(){return new v(this._options())}merge(e,t){return super.merge(this._map?d(e,this._map,this._levelsIterator):e,t)}_options(){return{...super._options(),map:{...this._map},levelsIterator:this._levelsIterator}}}},42851:(e,t,s)=>{s.r(t),s.d(t,{LineToolFibChannel:()=>f});var r,n,i=s(50151),l=s(11542),a=s(45126),o=s(85719),c=s(15399),h=s(73305),p=s(10568);!function(e){e[e.FibChannelWithReverse=1]="FibChannelWithReverse",e[e.FibChannelWithoutReverse=2]="FibChannelWithoutReverse",e[e.TheLatest=2]="TheLatest"}(r||(r={})),function(e){e[e.LevelsCount=24]="LevelsCount"}(n||(n={}));const u=new a.TranslatedString("erase level line",l.t(null,void 0,s(77114)));class f extends p.InplaceTextLineDataSource{constructor(e,t,r,n){super(e,t??f.createProperties(e.backgroundTheme().spawnOwnership()),r,n),this.version=2,Promise.all([s.e(2870),s.e(2211),s.e(1583)]).then(s.bind(s,93143)).then((({FibChannelPaneView:e})=>{this._setPaneViews([new e(this,this._model)])}))}levelsCount(){return 24}migrateVersion(e,t,s){s.properties.removeProperty("reverse")}pointsCount(){return 3}name(){return"Fib Channel"}processErase(e,t){const s="level"+t,r=(0,i.ensureDefined)(this.properties().child(s)).childs().visible;e.setProperty(r,!1,u,o.lineToolsDoNotAffectChartInvalidation)}editableTextProperties(){(0,i.assert)(!1,"unexpected method call")}static createProperties(e,t){const s=new c.LevelsProperty({defaultName:"linetoolfibchannel",state:t,map:{range:[1,24],names:["coeff","color","visible"]},theme:e});return this._configureProperties(s),s}async _getPropertyDefinitionsViewModelClass(){
return(await Promise.all([s.e(3401),s.e(3889),s.e(8009),s.e(6204),s.e(1963),s.e(8537)]).then(s.bind(s,75450))).FibDrawingsWith24LevelsDefinitionsViewModel}static _configureProperties(e){super._configureProperties(e);const t=[];for(let s=1;s<=24;s++){const r=(0,i.ensureDefined)(e.child("level"+s));t.push((0,i.ensureDefined)(r.child("color")))}e.addChild("linesColors",new h.LineToolColorsProperty(t))}}}}]);